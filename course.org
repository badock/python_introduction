# -*- org-confirm-babel-evaluate: nil -*-
#+OPTIONS:    H:3 num:nil toc:2 \n:nil ::t |:t ^:{} -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Introduction to Python
#+AUTHOR:    Walid and Jonathan
#+LANGUAGE:   en
#+HTML_HEAD:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+LINK_UP:    ../languages.html
#+LINK_HOME:  http://orgmode.org/worg/
#+EXCLUDE_TAGS: noexport
#+LaTeX_CLASS: beamer
#+OPTIONS: H:2
#+LaTeX_CLASS_OPTIONS: [presentation,smaller]

#+BEGIN_lateX
\AtBeginSection[] {
  \begin{frame}<beamer>{Outline}
    \[M 8;tableofcontents[currentsection]
  \end{frame}
}
#+END_lateX


* Introduction
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

* Instructions
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

** Expressions

#+name: expression1
#+begin_src python :results output :exports code
1 + 2 * 3 /4
"ab" + "cd" + "ef"
#+end_src

#+results: expression1

** Variables

#+name: variable1
#+begin_src python :results output :exports both
a = 1 + 2 * 3 /4
b = "ab" + "cd" + "ef"

print(a)
print(b)
#+end_src

which results in:

#+results: variable1
: 2
: abcdef

* Blocks
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

** If then else
** For / While

* Functions
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

** Declaration of functions
Functions are declared with:
- the *def* keyword
- the name of the function
- the arguments of the function

#+NAME: library
#+begin_src python
def foo(x):
  if x>0:
    return x+1
  else:
    return x-1
#+end_src


** Evaluation of functions
The following code call the function *foo*

#+name: function1
#+begin_src python :results output :exports both
<<library>>
a = foo(10)
print(a)
#+end_src

which results in:
#+results: function1


* Objects
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

* Errors
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

* Concurrency
:PROPERTIES:
:header-args:  :results output :exports both :noweb strip-export
:END:

** Threads

* Plotting

** Plotting with *matplotlib*
#+begin_src python :results file
import matplotlib, numpy
matplotlib.use('Agg')
import matplotlib.pyplot as plt
fig=plt.figure(figsize=(4,2))
x=numpy.linspace(-15,15)
plt.plot(numpy.sin(x)/x)
fig.tight_layout()
plt.savefig('python-matplot-fig.png')
return 'python-matplot-fig.png' # return filename to org-mode
#+end_src

#+RESULTS:
[[file:python-matplot-fig.png]]

** Result
file:python-matplot-fig.png
